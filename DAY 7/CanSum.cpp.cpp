//This code is generated by CHAT GPT :)
//given an array and a sum Find if we can make sum = k using elements of array, ekements can be in any order
//COMPLETE BOUNCERRRRRRRRRRR
#include <bits/stdc++.h>
using namespace std;

bool canMakeSum(int arr[], int n, int k) {
    // If the target sum is 0, we can always make it by not selecting any element.
    if (k == 0)
        return true;
    
    // If there are no elements left in the array or the target sum is negative, we cannot make it.
    if (n == 0 || k < 0)
        return false;

    // Recursive case:
    // 1. Try including the last element and subtract its value from the target sum.
    // 2. Try excluding the last element and keep the target sum as it is.
    return canMakeSum(arr, n - 1, k - arr[n - 1]) || canMakeSum(arr, n - 1, k);
}

int main() {
    int n; // number of elements in the array
    cin >> n;
    int arr[n];
    for (int i = 0; i < n; i++)
        cin >> arr[i];
    int k; // target sum
    cin >> k;

    if (canMakeSum(arr, n, k))
        cout << "Yes, it is possible to make the sum " << k << " using elements from the array.";
    else
        cout << "No, it is not possible to make the sum " << k << " using elements from the array.";

    return 0;
}
/*Given a number find if it is odd ar even using recursion*/